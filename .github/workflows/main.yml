name: update Docker image tags
on:
  repository_dispatch:
    types: [image-built]

jobs:
  update-env:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
        
      - name: Update .env File
        run: |
          # Display .env file for debugging purposes
          cat .env
          # Extract the tag from the repository dispatch event payload
          NEW_TAG=${{ github.event.client_payload.tag }}

          # Replace 'oldtag' with the new tag in the .env file
          sed -i "s/^SERVICE_REGISTRY_VERSION=.*/SERVICE_REGISTRY_VERSION=$NEW_TAG/" .env
          sed -i "s/^DEMO_ADAPTOR_VERSION=.*/DEMO_ADAPTOR_VERSION=$NEW_TAG/" .env
          sed -i "s/^WEBOTS_ADAPTOR_VERSION=.*/WEBOTS_ADAPTOR_VERSION=$NEW_TAG/" .env
          sed -i "s/^ADAPTOR_MANAGER_VERSION=.*/ADAPTOR_MANAGER_VERSION=$NEW_TAG/" .env
          sed -i "s/^SIMCOMP_UI_VERSION=.*/SIMCOMP_UI_VERSION=$NEW_TAG/" .env
          sed -i "s/^AXIS_CONVERTER_VERSION=.*/AXIS_CONVERTER_VERSION=$NEW_TAG/" .env

          # Display the updated .env file for debugging purposes
          cat .env

          # Add string to pipeline-dummy-text.txt so that pipeline does not fail if image tags were already up-to-date
          echo "1" >> pipeline-dummy-text.txt.txt

      - name: Commit and Push Changes
        run: |
          NEW_TAG=${{ github.event.client_payload.tag }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Update Docker image tags to $NEW_TAG"
          git push
          
